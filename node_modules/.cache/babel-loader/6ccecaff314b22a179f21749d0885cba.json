{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar isArray = require(\"lodash/isArray\");\n\nvar findIndex = require(\"lodash/findIndex\");\n\nvar forEach = require(\"lodash/forEach\");\n\nvar isEmpty = require(\"lodash/isEmpty\");\n\nvar filter = require(\"lodash/filter\");\n\nvar keys = require(\"lodash/keys\");\n\nfunction isBoolOp(operator, val) {\n  // Has {bool: must: []} ?\n  if (!val.bool || !val.bool[operator]) return false; // Doesn't have other stuff ?\n\n  return keys(val).length == 1 && keys(val.bool).length == 1;\n}\n\nfunction flattenBool(operator, arr) {\n  // Flatten bool.must\n  var newArr = [];\n  forEach(arr, function (node) {\n    if (isBoolOp(operator, node)) {\n      newArr = newArr.concat(node.bool[operator]);\n    } else {\n      newArr.push(node);\n    }\n  });\n  return newArr;\n}\n\nfunction boolHelper(val, operator) {\n  var _a;\n\n  var isArr = isArray(val);\n\n  if (isArr) {\n    // Remove empty filters\n    val = filter(val, function (f) {\n      return !isEmpty(f);\n    });\n\n    if (val.length === 1) {\n      if (operator != \"must_not\") return val[0];else val = val[0]; // Unbox array\n    } else if (val.length === 0) {\n      return {};\n    } else if ((operator == \"must\" || operator == \"should\") && findIndex(val, isBoolOp.bind(null, operator)) != -1) {\n      val = flattenBool(operator, val);\n    }\n  }\n\n  return {\n    bool: (_a = {}, _a[operator] = val, _a)\n  };\n}\n\nfunction BoolMust(val) {\n  return boolHelper(val, \"must\");\n}\n\nexports.BoolMust = BoolMust;\n\nfunction BoolMustNot(val) {\n  return boolHelper(val, \"must_not\");\n}\n\nexports.BoolMustNot = BoolMustNot;\n\nfunction BoolShould(val) {\n  return boolHelper(val, \"should\");\n}\n\nexports.BoolShould = BoolShould;","map":null,"metadata":{},"sourceType":"script"}