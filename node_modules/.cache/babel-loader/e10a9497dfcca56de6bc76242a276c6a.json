{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar axios_1 = require(\"axios\");\n\nvar ESTransport_1 = require(\"./ESTransport\");\n\nvar defaults = require(\"lodash/defaults\");\n\nvar AxiosESTransport =\n/** @class */\nfunction (_super) {\n  __extends(AxiosESTransport, _super);\n\n  function AxiosESTransport(host, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.host = host;\n    _this.options = defaults(options, {\n      headers: {},\n      searchUrlPath: \"/_search\",\n      timeout: AxiosESTransport.timeout\n    });\n    var credentials = AxiosESTransport.parseCredentials(_this.options);\n    var config = defaults(credentials, {\n      baseURL: _this.host,\n      timeout: _this.options.timeout,\n      headers: _this.options.headers\n    });\n    _this.axios = axios_1.default.create(config);\n    return _this;\n  }\n\n  AxiosESTransport.prototype.search = function (query) {\n    return this.axios.post(this.options.searchUrlPath, query).then(this.getData);\n  };\n\n  AxiosESTransport.prototype.getData = function (response) {\n    return response.data;\n  };\n\n  AxiosESTransport.parseCredentials = function (options) {\n    var credentials = {};\n\n    if (options.basicAuth !== undefined) {\n      var parsed = options.basicAuth.split(\":\");\n      var auth = {\n        username: parsed[0],\n        password: parsed[1]\n      };\n      credentials['auth'] = auth;\n    }\n\n    if (options.withCredentials) {\n      credentials['withCredentials'] = true;\n    }\n\n    return credentials;\n  };\n\n  AxiosESTransport.timeout = 5000;\n  return AxiosESTransport;\n}(ESTransport_1.ESTransport);\n\nexports.AxiosESTransport = AxiosESTransport;","map":null,"metadata":{},"sourceType":"script"}