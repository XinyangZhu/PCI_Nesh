{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar reduce = require(\"lodash/reduce\");\n\nvar map = require(\"lodash/map\");\n\nvar reject = require(\"lodash/reject\");\n\nvar isUndefined = require(\"lodash/isUndefined\");\n\nvar Utils =\n/** @class */\nfunction () {\n  function Utils() {}\n\n  Utils.guid = function (prefix) {\n    if (prefix === void 0) {\n      prefix = \"\";\n    }\n\n    var id = ++Utils.guidCounter;\n    return prefix.toString() + id;\n  };\n\n  Utils.collapse = function (collection, seed) {\n    var reducer = function reducer(current, fn) {\n      return fn(current);\n    };\n\n    return reduce(collection, reducer, seed);\n  };\n\n  Utils.instanceOf = function (klass) {\n    return function (val) {\n      return val instanceof klass;\n    };\n  };\n\n  Utils.interpolate = function (str, interpolations) {\n    return str.replace(/{([^{}]*)}/g, function (a, b) {\n      var r = interpolations[b];\n      return typeof r === 'string' || typeof r === 'number' ? r : a;\n    });\n  };\n\n  Utils.translate = function (key, interpolations) {\n    if (interpolations) {\n      return Utils.interpolate(key, interpolations);\n    } else {\n      return key;\n    }\n  };\n\n  Utils.computeOptionKeys = function (options, fields, defaultKey) {\n    return map(options, function (option) {\n      return Utils.generateKeyFromFields(option, fields, defaultKey);\n    });\n  };\n\n  Utils.generateKeyFromFields = function (ob, fields, defaultKey) {\n    if (ob.key) {\n      return ob;\n    }\n\n    var fieldValues = reject(map(fields, function (field) {\n      return ob[field];\n    }), isUndefined);\n\n    if (fieldValues.length > 0) {\n      ob.key = fieldValues.join(\"_\");\n    } else {\n      ob.key = defaultKey;\n    }\n\n    return ob;\n  };\n\n  Utils.guidCounter = 0;\n  return Utils;\n}();\n\nexports.Utils = Utils;","map":null,"metadata":{},"sourceType":"script"}