{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar core_1 = require(\"../../../../core\");\n\nvar ui_1 = require(\"../../../ui\");\n\nvar defaults = require(\"lodash/defaults\");\n\nvar groupBy = require(\"lodash/groupBy\");\n\nvar size = require(\"lodash/size\");\n\nvar toArray = require(\"lodash/toArray\");\n\nvar forEach = require(\"lodash/forEach\");\n\nvar map = require(\"lodash/map\");\n\nvar GroupedSelectedFilters =\n/** @class */\nfunction (_super) {\n  __extends(GroupedSelectedFilters, _super);\n\n  function GroupedSelectedFilters(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.translate = _this.translate.bind(_this);\n    _this.removeFilter = _this.removeFilter.bind(_this);\n    _this.removeFilters = _this.removeFilters.bind(_this);\n    return _this;\n  }\n\n  GroupedSelectedFilters.prototype.defineBEMBlocks = function () {\n    var blockName = this.props.mod || \"sk-filter-groups\";\n    return {\n      container: blockName\n    };\n  };\n\n  GroupedSelectedFilters.prototype.getFilters = function () {\n    return this.getQuery().getSelectedFilters();\n  };\n\n  GroupedSelectedFilters.prototype.getGroupedFilters = function () {\n    var filters = this.getFilters();\n    return toArray(groupBy(filters, 'id'));\n  };\n\n  GroupedSelectedFilters.prototype.hasFilters = function () {\n    return size(this.getFilters()) > 0;\n  };\n\n  GroupedSelectedFilters.prototype.removeFilter = function (filter) {\n    filter.remove();\n    this.searchkit.performSearch();\n  };\n\n  GroupedSelectedFilters.prototype.removeFilters = function (filters) {\n    forEach(filters, function (filter) {\n      return filter.remove();\n    });\n    this.searchkit.performSearch();\n  };\n\n  GroupedSelectedFilters.prototype.render = function () {\n    var _this = this;\n\n    var groupComponent = this.props.groupComponent;\n\n    if (!this.hasFilters()) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: this.bemBlocks.container()\n    }, map(this.getGroupedFilters(), function (filters) {\n      return core_1.renderComponent(groupComponent, {\n        key: filters[0].id,\n        className: filters[0].id ? \"filter-group-\" + filters[0].id : undefined,\n        title: _this.translate(filters[0].name),\n        filters: filters,\n        translate: _this.translate,\n        removeFilter: _this.removeFilter,\n        removeFilters: _this.removeFilters\n      });\n    }));\n  };\n\n  GroupedSelectedFilters.propTypes = defaults({}, core_1.SearchkitComponent.propTypes);\n  GroupedSelectedFilters.defaultProps = {\n    groupComponent: ui_1.FilterGroup\n  };\n  return GroupedSelectedFilters;\n}(core_1.SearchkitComponent);\n\nexports.GroupedSelectedFilters = GroupedSelectedFilters;","map":null,"metadata":{},"sourceType":"script"}