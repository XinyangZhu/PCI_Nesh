{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar FieldContext_1 = require(\"./FieldContext\");\n\nvar query_dsl_1 = require(\"../query_dsl\");\n\nvar get = require(\"lodash/get\");\n\nvar NestedFieldContext =\n/** @class */\nfunction (_super) {\n  __extends(NestedFieldContext, _super);\n\n  function NestedFieldContext(fieldOptions) {\n    var _this = _super.call(this, fieldOptions) || this;\n\n    if (!get(_this.fieldOptions, \"options.path\")) {\n      throw new Error(\"fieldOptions type:nested requires options.path\");\n    }\n\n    return _this;\n  }\n\n  NestedFieldContext.prototype.getAggregationPath = function () {\n    return \"inner\";\n  };\n\n  NestedFieldContext.prototype.wrapAggregations = function () {\n    var aggregations = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      aggregations[_i] = arguments[_i];\n    }\n\n    return [query_dsl_1.NestedBucket.apply(void 0, [\"inner\", this.fieldOptions.options.path].concat(aggregations))];\n  };\n\n  NestedFieldContext.prototype.wrapFilter = function (filter) {\n    return query_dsl_1.NestedQuery(this.fieldOptions.options.path, filter, this.fieldOptions.options);\n  };\n\n  return NestedFieldContext;\n}(FieldContext_1.FieldContext);\n\nexports.NestedFieldContext = NestedFieldContext;","map":null,"metadata":{},"sourceType":"script"}