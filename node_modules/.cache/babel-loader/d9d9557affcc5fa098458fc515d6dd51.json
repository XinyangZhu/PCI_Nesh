{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar PropTypes = require(\"prop-types\");\n\nvar core_1 = require(\"../../../../core\");\n\nvar ui_1 = require(\"../../../ui\");\n\nvar defaults = require(\"lodash/defaults\");\n\nvar CheckboxFilter =\n/** @class */\nfunction (_super) {\n  __extends(CheckboxFilter, _super);\n\n  function CheckboxFilter(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.toggleFilter = _this.toggleFilter.bind(_this);\n    return _this;\n  }\n\n  CheckboxFilter.prototype.defineAccessor = function () {\n    var _a = this.props,\n        id = _a.id,\n        title = _a.title,\n        translations = _a.translations,\n        label = _a.label,\n        filter = _a.filter;\n    return new core_1.CheckboxFilterAccessor(id, {\n      id: id,\n      title: title,\n      label: label,\n      translations: translations,\n      filter: filter\n    });\n  };\n\n  CheckboxFilter.prototype.toggleFilter = function () {\n    this.accessor.state = this.accessor.state.create(!this.accessor.state.getValue());\n    this.searchkit.performSearch();\n  };\n\n  CheckboxFilter.prototype.setFilters = function (keys) {\n    this.accessor.state = this.accessor.state.setValue(keys.length > 0);\n    this.searchkit.performSearch();\n  };\n\n  CheckboxFilter.prototype.getSelectedItems = function () {\n    if (this.accessor.state.getValue()) {\n      return [this.props.label];\n    } else {\n      return [];\n    }\n  };\n\n  CheckboxFilter.prototype.render = function () {\n    if (!this.accessor) return null;\n    var _a = this.props,\n        listComponent = _a.listComponent,\n        containerComponent = _a.containerComponent,\n        showCount = _a.showCount,\n        title = _a.title,\n        id = _a.id,\n        label = _a.label;\n    var disabled = this.searchkit.getHitsCount() == 0 && !this.accessor.state.getValue();\n    return core_1.renderComponent(containerComponent, {\n      title: title,\n      className: id ? \"filter--\" + id : undefined,\n      disabled: disabled\n    }, core_1.renderComponent(listComponent, {\n      items: [{\n        key: label,\n        doc_count: this.accessor.getDocCount()\n      }],\n      selectedItems: this.getSelectedItems(),\n      toggleItem: this.toggleFilter,\n      setItems: this.setFilters.bind(this),\n      showCount: showCount\n    }));\n  };\n\n  CheckboxFilter.propTypes = defaults({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    filter: PropTypes.object.isRequired,\n    translations: core_1.SearchkitComponent.translationsPropType(core_1.CheckboxFilterAccessor.translations),\n    showCount: PropTypes.bool\n  }, core_1.SearchkitComponent.propTypes);\n  CheckboxFilter.defaultProps = {\n    listComponent: ui_1.CheckboxItemList,\n    containerComponent: ui_1.Panel,\n    collapsable: false,\n    showCount: true\n  };\n  return CheckboxFilter;\n}(core_1.SearchkitComponent);\n\nexports.CheckboxFilter = CheckboxFilter;","map":null,"metadata":{},"sourceType":"script"}