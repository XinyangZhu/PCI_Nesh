{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar ItemListComponents_1 = require(\"./ItemListComponents\");\n\nvar FastClick_1 = require(\"../../../core/react/FastClick\");\n\nvar defaults = require(\"lodash/defaults\");\n\nvar ItemHistogramComponent =\n/** @class */\nfunction (_super) {\n  __extends(ItemHistogramComponent, _super);\n\n  function ItemHistogramComponent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ItemHistogramComponent.prototype.getCountRatio = function () {\n    var _a = this.props,\n        rawCount = _a.rawCount,\n        listDocCount = _a.listDocCount;\n\n    if (rawCount == undefined || listDocCount == undefined || listDocCount == 0) {\n      return 0;\n    } else {\n      return rawCount / listDocCount;\n    }\n  };\n\n  ItemHistogramComponent.prototype.render = function () {\n    var _a = this.props,\n        bemBlocks = _a.bemBlocks,\n        onClick = _a.onClick,\n        active = _a.active,\n        disabled = _a.disabled,\n        style = _a.style,\n        itemKey = _a.itemKey,\n        label = _a.label,\n        count = _a.count,\n        showCount = _a.showCount,\n        showCheckbox = _a.showCheckbox;\n    var block = bemBlocks.option;\n    var className = block().state({\n      active: active,\n      disabled: disabled,\n      histogram: true\n    }).mix(bemBlocks.container(\"item\"));\n    var barWidth = this.getCountRatio() * 100 + '%';\n    return React.createElement(FastClick_1.FastClick, {\n      handler: onClick\n    }, React.createElement(\"div\", {\n      className: className,\n      style: style,\n      \"data-qa\": \"option\",\n      \"data-key\": itemKey\n    }, React.createElement(\"div\", {\n      className: block(\"bar-container\")\n    }, React.createElement(\"div\", {\n      className: block(\"bar\"),\n      style: {\n        width: barWidth\n      }\n    })), showCheckbox ? React.createElement(\"input\", {\n      type: \"checkbox\",\n      \"data-qa\": \"checkbox\",\n      checked: active,\n      readOnly: true,\n      className: block(\"checkbox\").state({\n        active: active\n      })\n    }) : undefined, React.createElement(\"div\", {\n      \"data-qa\": \"label\",\n      className: block(\"text\")\n    }, label), showCount && count != undefined ? React.createElement(\"div\", {\n      \"data-qa\": \"count\",\n      className: block(\"count\")\n    }, count) : undefined));\n  };\n\n  return ItemHistogramComponent;\n}(React.PureComponent);\n\nexports.ItemHistogramComponent = ItemHistogramComponent;\n\nvar ItemHistogramList =\n/** @class */\nfunction (_super) {\n  __extends(ItemHistogramList, _super);\n\n  function ItemHistogramList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ItemHistogramList.defaultProps = defaults({\n    //mod: \"sk-item-histogram\",\n    itemComponent: ItemHistogramComponent,\n    showCount: true\n  }, ItemListComponents_1.AbstractItemList.defaultProps);\n  return ItemHistogramList;\n}(ItemListComponents_1.AbstractItemList);\n\nexports.ItemHistogramList = ItemHistogramList;","map":null,"metadata":{},"sourceType":"script"}