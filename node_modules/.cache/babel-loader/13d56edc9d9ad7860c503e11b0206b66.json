{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BaseQueryAccessor_1 = require(\"./BaseQueryAccessor\");\n\nvar query_1 = require(\"../query\");\n\nvar assign = require(\"lodash/assign\");\n\nvar QueryAccessor =\n/** @class */\nfunction (_super) {\n  __extends(QueryAccessor, _super);\n\n  function QueryAccessor(key, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this, key) || this;\n\n    _this.options = options;\n    _this.options.queryFields = _this.options.queryFields || [\"_all\"];\n    return _this;\n  }\n\n  QueryAccessor.prototype.fromQueryObject = function (ob) {\n    _super.prototype.fromQueryObject.call(this, ob);\n\n    if (this.options.onQueryStateChange) {\n      this.options.onQueryStateChange();\n    }\n  };\n\n  QueryAccessor.prototype.buildSharedQuery = function (query) {\n    var _this = this;\n\n    var queryStr = this.state.getValue();\n\n    if (queryStr) {\n      var queryBuilder = this.options.queryBuilder || query_1.SimpleQueryString;\n      var simpleQuery = queryBuilder(queryStr, assign({\n        fields: this.options.queryFields\n      }, this.options.queryOptions));\n      var queries = [simpleQuery];\n\n      if (this.options.prefixQueryFields) {\n        queries.push(query_1.MultiMatchQuery(queryStr, assign(this.options.prefixQueryOptions, {\n          type: \"phrase_prefix\",\n          fields: this.options.prefixQueryFields\n        })));\n      }\n\n      query = query.addQuery(query_1.BoolShould(queries));\n\n      if (this.options.addToFilters) {\n        query = query.addSelectedFilter({\n          name: this.options.title,\n          value: queryStr,\n          id: this.key,\n          remove: function remove() {\n            return _this.state = _this.state.clear();\n          }\n        });\n      } else {\n        query = query.setQueryString(queryStr);\n      }\n\n      return query;\n    }\n\n    return query;\n  };\n\n  return QueryAccessor;\n}(BaseQueryAccessor_1.BaseQueryAccessor);\n\nexports.QueryAccessor = QueryAccessor;","map":null,"metadata":{},"sourceType":"script"}