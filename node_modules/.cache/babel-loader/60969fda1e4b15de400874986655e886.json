{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar support_1 = require(\"../support\");\n\nvar get = require(\"lodash/get\");\n\nvar compact = require(\"lodash/compact\");\n\nvar Accessor =\n/** @class */\nfunction () {\n  function Accessor() {\n    this.active = true;\n    this.translations = {};\n    this.refCount = 0;\n  }\n\n  Accessor.prototype.incrementRef = function () {\n    this.refCount++;\n  };\n\n  Accessor.prototype.decrementRef = function () {\n    this.refCount--;\n  };\n\n  Accessor.prototype.setActive = function (active) {\n    this.active = active;\n    return this;\n  };\n\n  Accessor.prototype.setSearchkitManager = function (searchkit) {\n    this.searchkit = searchkit;\n    this.uuid = searchkit.guid();\n    this.results = this.searchkit.results;\n  };\n\n  Accessor.prototype.translate = function (key, interpolations) {\n    var translation = this.searchkit && this.searchkit.translate(key) || this.translations[key] || key;\n    return support_1.Utils.translate(translation, interpolations);\n  };\n\n  Accessor.prototype.getResults = function () {\n    return this.results;\n  };\n\n  Accessor.prototype.setResults = function (results) {\n    this.results = results;\n  };\n\n  Accessor.prototype.getAggregations = function (path, defaultValue) {\n    var results = this.getResults();\n    var getPath = compact(['aggregations'].concat(path));\n    return get(results, getPath, defaultValue);\n  };\n\n  Accessor.prototype.beforeBuildQuery = function () {};\n\n  Accessor.prototype.buildSharedQuery = function (query) {\n    return query;\n  };\n\n  Accessor.prototype.buildOwnQuery = function (query) {\n    return query;\n  };\n\n  return Accessor;\n}();\n\nexports.Accessor = Accessor;","map":null,"metadata":{},"sourceType":"script"}