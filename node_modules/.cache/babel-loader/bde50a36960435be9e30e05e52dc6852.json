{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar core_1 = require(\"../../../../core\");\n\nvar defaults = require(\"lodash/defaults\");\n\nvar size = require(\"lodash/size\");\n\nvar map = require(\"lodash/map\");\n\nvar FilterItem =\n/** @class */\nfunction (_super) {\n  __extends(FilterItem, _super);\n\n  function FilterItem() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FilterItem.prototype.render = function () {\n    var props = this.props;\n    return React.createElement(\"div\", {\n      className: props.bemBlocks.option().mix(props.bemBlocks.container(\"item\")).mix(\"selected-filter--\" + props.filterId)\n    }, React.createElement(\"div\", {\n      className: props.bemBlocks.option(\"name\")\n    }, props.labelKey, \": \", props.labelValue), React.createElement(core_1.FastClick, {\n      handler: props.removeFilter\n    }, React.createElement(\"div\", {\n      className: props.bemBlocks.option(\"remove-action\")\n    }, \"x\")));\n  };\n\n  return FilterItem;\n}(React.PureComponent);\n\nexports.FilterItem = FilterItem;\n\nvar SelectedFilters =\n/** @class */\nfunction (_super) {\n  __extends(SelectedFilters, _super);\n\n  function SelectedFilters(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.translate = _this.translate.bind(_this);\n    return _this;\n  }\n\n  SelectedFilters.prototype.defineBEMBlocks = function () {\n    var blockName = this.props.mod || \"sk-selected-filters\";\n    return {\n      container: blockName,\n      option: blockName + \"-option\"\n    };\n  };\n\n  SelectedFilters.prototype.getFilters = function () {\n    return this.getQuery().getSelectedFilters();\n  };\n\n  SelectedFilters.prototype.hasFilters = function () {\n    return size(this.getFilters()) > 0;\n  };\n\n  SelectedFilters.prototype.renderFilter = function (filter) {\n    return core_1.renderComponent(this.props.itemComponent, {\n      key: filter.name + '$$' + filter.value,\n      bemBlocks: this.bemBlocks,\n      filterId: filter.id,\n      labelKey: this.translate(filter.name),\n      labelValue: this.translate(filter.value),\n      removeFilter: this.removeFilter.bind(this, filter),\n      translate: this.translate\n    });\n  };\n\n  SelectedFilters.prototype.removeFilter = function (filter) {\n    filter.remove();\n    this.searchkit.performSearch();\n  };\n\n  SelectedFilters.prototype.render = function () {\n    if (!this.hasFilters()) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: this.bemBlocks.container()\n    }, map(this.getFilters(), this.renderFilter.bind(this)));\n  };\n\n  SelectedFilters.propTypes = defaults({}, core_1.SearchkitComponent.propTypes);\n  SelectedFilters.defaultProps = {\n    itemComponent: FilterItem\n  };\n  return SelectedFilters;\n}(core_1.SearchkitComponent);\n\nexports.SelectedFilters = SelectedFilters;","map":null,"metadata":{},"sourceType":"script"}