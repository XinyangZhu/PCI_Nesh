{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar assign = require(\"lodash/assign\");\n\nvar isEmpty = require(\"lodash/isEmpty\");\n\nvar AggsContainer_1 = require(\"./AggsContainer\"); // Emulates the maximum value an integer can have in Java\n// See: https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#MAX_VALUE\n\n\nexports.DefaultNumberBuckets = Math.pow(2, 31) - 1;\n\nfunction TermsBucket(key, field, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var childAggs = [];\n\n  for (var _i = 3; _i < arguments.length; _i++) {\n    childAggs[_i - 3] = arguments[_i];\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    terms: assign({\n      field: field\n    }, options)\n  }, childAggs);\n}\n\nexports.TermsBucket = TermsBucket;\n\nfunction RangeBucket(key, field, ranges) {\n  var childAggs = [];\n\n  for (var _i = 3; _i < arguments.length; _i++) {\n    childAggs[_i - 3] = arguments[_i];\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    range: {\n      field: field,\n      ranges: ranges\n    }\n  }, childAggs);\n}\n\nexports.RangeBucket = RangeBucket;\n\nfunction ChildrenBucket(key, type) {\n  var childAggs = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    childAggs[_i - 2] = arguments[_i];\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    children: {\n      type: type\n    }\n  }, childAggs);\n}\n\nexports.ChildrenBucket = ChildrenBucket;\n\nfunction FilterBucket(key, filter) {\n  var childAggs = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    childAggs[_i - 2] = arguments[_i];\n  }\n\n  if (isEmpty(filter)) {\n    return AggsContainer_1.AggsContainer(key, {\n      filter: {\n        match_all: {}\n      }\n    }, childAggs);\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    filter: filter\n  }, childAggs);\n}\n\nexports.FilterBucket = FilterBucket;\n\nfunction NestedBucket(key, path) {\n  var childAggs = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    childAggs[_i - 2] = arguments[_i];\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    nested: {\n      path: path\n    }\n  }, childAggs);\n}\n\nexports.NestedBucket = NestedBucket;\n\nfunction SignificantTermsBucket(key, field, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var childAggs = [];\n\n  for (var _i = 3; _i < arguments.length; _i++) {\n    childAggs[_i - 3] = arguments[_i];\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    significant_terms: assign({\n      field: field\n    }, options)\n  }, childAggs);\n}\n\nexports.SignificantTermsBucket = SignificantTermsBucket;\n\nfunction GeohashBucket(key, field, options) {\n  var childAggs = [];\n\n  for (var _i = 3; _i < arguments.length; _i++) {\n    childAggs[_i - 3] = arguments[_i];\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    geohash_grid: assign({\n      field: field\n    }, options)\n  }, childAggs);\n}\n\nexports.GeohashBucket = GeohashBucket;\n\nfunction HistogramBucket(key, field, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var childAggs = [];\n\n  for (var _i = 3; _i < arguments.length; _i++) {\n    childAggs[_i - 3] = arguments[_i];\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    histogram: assign({\n      field: field\n    }, options)\n  }, childAggs);\n}\n\nexports.HistogramBucket = HistogramBucket;\n\nfunction GeoboundsBucket(key, field, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var childAggs = [];\n\n  for (var _i = 3; _i < arguments.length; _i++) {\n    childAggs[_i - 3] = arguments[_i];\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    geo_bounds: assign({\n      field: field\n    }, options)\n  }, childAggs);\n}\n\nexports.GeoboundsBucket = GeoboundsBucket;\n\nfunction DateHistogramBucket(key, field, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var childAggs = [];\n\n  for (var _i = 3; _i < arguments.length; _i++) {\n    childAggs[_i - 3] = arguments[_i];\n  }\n\n  return AggsContainer_1.AggsContainer(key, {\n    date_histogram: assign({\n      field: field\n    }, options)\n  }, childAggs);\n}\n\nexports.DateHistogramBucket = DateHistogramBucket;","map":null,"metadata":{},"sourceType":"script"}