{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar ItemComponents_1 = require(\"./ItemComponents\");\n\nvar core_1 = require(\"../../../core\");\n\nvar map = require(\"lodash/map\");\n\nvar includes = require(\"lodash/includes\");\n\nvar defaults = require(\"lodash/defaults\");\n\nvar identity = require(\"lodash/identity\");\n\nvar AbstractItemList =\n/** @class */\nfunction (_super) {\n  __extends(AbstractItemList, _super);\n\n  function AbstractItemList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractItemList.prototype.isActive = function (option) {\n    var _a = this.props,\n        selectedItems = _a.selectedItems,\n        multiselect = _a.multiselect;\n\n    if (multiselect) {\n      return includes(selectedItems, option.key);\n    } else {\n      if (selectedItems.length == 0) return null;\n      return selectedItems[0] == option.key;\n    }\n  };\n\n  AbstractItemList.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        mod = _a.mod,\n        itemComponent = _a.itemComponent,\n        _b = _a.items,\n        items = _b === void 0 ? [] : _b,\n        translate = _a.translate,\n        toggleItem = _a.toggleItem,\n        setItems = _a.setItems,\n        multiselect = _a.multiselect,\n        countFormatter = _a.countFormatter,\n        disabled = _a.disabled,\n        showCount = _a.showCount,\n        className = _a.className,\n        docCount = _a.docCount;\n    var bemBlocks = {\n      container: core_1.block(mod).el,\n      option: core_1.block(mod + \"-option\").el\n    };\n    var toggleFunc = multiselect ? toggleItem : function (key) {\n      return setItems([key]);\n    };\n    var actions = map(items, function (option) {\n      var label = option.title || option.label || option.key;\n      return React.createElement(itemComponent, {\n        label: translate(label),\n        onClick: function onClick() {\n          return toggleFunc(option.key);\n        },\n        bemBlocks: bemBlocks,\n        key: option.key,\n        itemKey: option.key,\n        count: countFormatter(option.doc_count),\n        rawCount: option.doc_count,\n        listDocCount: docCount,\n        disabled: option.disabled,\n        showCount: showCount,\n        active: _this.isActive(option)\n      });\n    });\n    return React.createElement(\"div\", {\n      \"data-qa\": \"options\",\n      className: bemBlocks.container().mix(className).state({\n        disabled: disabled\n      })\n    }, actions);\n  };\n\n  AbstractItemList.defaultProps = {\n    mod: \"sk-item-list\",\n    showCount: true,\n    itemComponent: ItemComponents_1.CheckboxItemComponent,\n    translate: identity,\n    multiselect: true,\n    selectItems: [],\n    countFormatter: identity\n  };\n  return AbstractItemList;\n}(React.PureComponent);\n\nexports.AbstractItemList = AbstractItemList;\n\nvar ItemList =\n/** @class */\nfunction (_super) {\n  __extends(ItemList, _super);\n\n  function ItemList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ItemList.defaultProps = defaults({\n    itemComponent: ItemComponents_1.ItemComponent\n  }, AbstractItemList.defaultProps);\n  return ItemList;\n}(AbstractItemList);\n\nexports.ItemList = ItemList;\n\nvar CheckboxItemList =\n/** @class */\nfunction (_super) {\n  __extends(CheckboxItemList, _super);\n\n  function CheckboxItemList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CheckboxItemList.defaultProps = defaults({\n    itemComponent: ItemComponents_1.CheckboxItemComponent\n  }, AbstractItemList.defaultProps);\n  return CheckboxItemList;\n}(AbstractItemList);\n\nexports.CheckboxItemList = CheckboxItemList;\n\nvar Toggle =\n/** @class */\nfunction (_super) {\n  __extends(Toggle, _super);\n\n  function Toggle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Toggle.defaultProps = defaults({\n    itemComponent: ItemComponents_1.ItemComponent,\n    mod: 'sk-toggle',\n    showCount: false\n  }, AbstractItemList.defaultProps);\n  return Toggle;\n}(AbstractItemList);\n\nexports.Toggle = Toggle;\n\nvar Tabs =\n/** @class */\nfunction (_super) {\n  __extends(Tabs, _super);\n\n  function Tabs() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Tabs.defaultProps = defaults({\n    itemComponent: ItemComponents_1.ItemComponent,\n    mod: 'sk-tabs',\n    showCount: false,\n    multiselect: false\n  }, AbstractItemList.defaultProps);\n  return Tabs;\n}(AbstractItemList);\n\nexports.Tabs = Tabs;","map":null,"metadata":{},"sourceType":"script"}