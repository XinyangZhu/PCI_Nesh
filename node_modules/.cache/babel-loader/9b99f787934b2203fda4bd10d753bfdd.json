{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar state_1 = require(\"../state\");\n\nvar FilterBasedAccessor_1 = require(\"./FilterBasedAccessor\");\n\nvar query_1 = require(\"../query/\");\n\nvar map = require(\"lodash/map\");\n\nvar each = require(\"lodash/each\");\n\nvar compact = require(\"lodash/compact\");\n\nvar take = require(\"lodash/take\");\n\nvar omitBy = require(\"lodash/omitBy\");\n\nvar isUndefined = require(\"lodash/isUndefined\");\n\nvar HierarchicalFacetAccessor =\n/** @class */\nfunction (_super) {\n  __extends(HierarchicalFacetAccessor, _super);\n\n  function HierarchicalFacetAccessor(key, options) {\n    var _this = _super.call(this, key) || this;\n\n    _this.state = new state_1.LevelState();\n    _this.options = options;\n\n    _this.computeUuids();\n\n    return _this;\n  }\n\n  HierarchicalFacetAccessor.prototype.computeUuids = function () {\n    var _this = this;\n\n    this.uuids = map(this.options.fields, function (field) {\n      return _this.uuid + field;\n    });\n  };\n\n  HierarchicalFacetAccessor.prototype.onResetFilters = function () {\n    this.resetState();\n  };\n\n  HierarchicalFacetAccessor.prototype.getBuckets = function (level) {\n    var field = this.options.fields[level];\n    var buckets = this.getAggregations([this.options.id, field, field, \"buckets\"], []);\n    return map(buckets, function (item) {\n      item.key = String(item.key);\n      return item;\n    });\n  };\n\n  HierarchicalFacetAccessor.prototype.getOrder = function () {\n    var _a;\n\n    if (this.options.orderKey) {\n      var orderDirection = this.options.orderDirection || \"asc\";\n      return _a = {}, _a[this.options.orderKey] = orderDirection, _a;\n    }\n  };\n\n  HierarchicalFacetAccessor.prototype.buildSharedQuery = function (query) {\n    var _this = this;\n\n    each(this.options.fields, function (field, i) {\n      var filters = _this.state.getLevel(i);\n\n      var parentFilter = _this.state.getLevel(i - 1);\n\n      var isLeaf = !_this.state.levelHasFilters(i + 1);\n      var filterTerms = map(filters, query_1.TermQuery.bind(null, field));\n\n      if (filterTerms.length > 0) {\n        query = query.addFilter(_this.uuids[i], filterTerms.length > 1 ? query_1.BoolShould(filterTerms) : filterTerms[0]);\n      }\n\n      if (isLeaf) {\n        var selectedFilters = map(filters, function (filter) {\n          return {\n            id: _this.options.id,\n            name: _this.translate(parentFilter[0]) || _this.options.title || _this.translate(field),\n            value: _this.translate(filter),\n            remove: function remove() {\n              _this.state = _this.state.remove(i, filter);\n            }\n          };\n        });\n        query = query.addSelectedFilters(selectedFilters);\n      }\n    });\n    return query;\n  };\n\n  HierarchicalFacetAccessor.prototype.buildOwnQuery = function (query) {\n    var _this = this;\n\n    var lvlAggs = compact(map(this.options.fields, function (field, i) {\n      if (_this.state.levelHasFilters(i - 1) || i == 0) {\n        return query_1.FilterBucket(field, query.getFiltersWithKeys(take(_this.uuids, i)), query_1.TermsBucket(field, field, omitBy({\n          size: _this.options.size,\n          order: _this.getOrder()\n        }, isUndefined)));\n      }\n    }));\n    var aggs = query_1.FilterBucket.apply(void 0, [this.options.id, query.getFiltersWithoutKeys(this.uuids)].concat(lvlAggs));\n    return query.setAggs(aggs);\n  };\n\n  return HierarchicalFacetAccessor;\n}(FilterBasedAccessor_1.FilterBasedAccessor);\n\nexports.HierarchicalFacetAccessor = HierarchicalFacetAccessor;","map":null,"metadata":{},"sourceType":"script"}