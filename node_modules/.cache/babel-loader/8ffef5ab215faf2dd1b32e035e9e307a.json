{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar FacetFilterProps_1 = require(\"./FacetFilterProps\");\n\nvar core_1 = require(\"../../../../core\");\n\nvar react_1 = require(\"../../../../core/react\");\n\nvar ui_1 = require(\"../../../ui\");\n\nvar identity = require(\"lodash/identity\");\n\nvar FacetFilter =\n/** @class */\nfunction (_super) {\n  __extends(FacetFilter, _super);\n\n  function FacetFilter(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.toggleViewMoreOption = _this.toggleViewMoreOption.bind(_this);\n    return _this;\n  }\n\n  FacetFilter.prototype.getAccessorOptions = function () {\n    var _a = this.props,\n        field = _a.field,\n        id = _a.id,\n        operator = _a.operator,\n        title = _a.title,\n        include = _a.include,\n        exclude = _a.exclude,\n        size = _a.size,\n        translations = _a.translations,\n        orderKey = _a.orderKey,\n        orderDirection = _a.orderDirection,\n        fieldOptions = _a.fieldOptions;\n    return {\n      id: id,\n      operator: operator,\n      title: title,\n      size: size,\n      include: include,\n      exclude: exclude,\n      field: field,\n      translations: translations,\n      orderKey: orderKey,\n      orderDirection: orderDirection,\n      fieldOptions: fieldOptions\n    };\n  };\n\n  FacetFilter.prototype.defineAccessor = function () {\n    return new core_1.FacetAccessor(this.props.id, this.getAccessorOptions());\n  };\n\n  FacetFilter.prototype.defineBEMBlocks = function () {\n    var blockName = this.props.mod || \"sk-refinement-list\";\n    return {\n      container: blockName,\n      option: blockName + \"-option\"\n    };\n  };\n\n  FacetFilter.prototype.componentDidUpdate = function (prevProps) {\n    if (prevProps.operator != this.props.operator) {\n      this.accessor.options.operator = this.props.operator;\n      this.searchkit.performSearch();\n    }\n  };\n\n  FacetFilter.prototype.toggleFilter = function (key) {\n    this.accessor.state = this.accessor.state.toggle(key);\n    this.searchkit.performSearch();\n  };\n\n  FacetFilter.prototype.setFilters = function (keys) {\n    this.accessor.state = this.accessor.state.setValue(keys);\n    this.searchkit.performSearch();\n  };\n\n  FacetFilter.prototype.toggleViewMoreOption = function (option) {\n    this.accessor.setViewMoreOption(option);\n    this.searchkit.performSearch();\n  };\n\n  FacetFilter.prototype.hasOptions = function () {\n    return this.accessor.getBuckets().length != 0;\n  };\n\n  FacetFilter.prototype.getSelectedItems = function () {\n    return this.accessor.state.getValue();\n  };\n\n  FacetFilter.prototype.getItems = function () {\n    return this.props.bucketsTransform(this.accessor.getBuckets());\n  };\n\n  FacetFilter.prototype.render = function () {\n    if (!this.accessor) return null;\n    var _a = this.props,\n        listComponent = _a.listComponent,\n        containerComponent = _a.containerComponent,\n        showCount = _a.showCount,\n        title = _a.title,\n        id = _a.id,\n        countFormatter = _a.countFormatter;\n    return react_1.renderComponent(containerComponent, {\n      title: title,\n      className: id ? \"filter--\" + id : undefined,\n      disabled: !this.hasOptions()\n    }, [react_1.renderComponent(listComponent, {\n      key: \"listComponent\",\n      items: this.getItems(),\n      itemComponent: this.props.itemComponent,\n      selectedItems: this.getSelectedItems(),\n      toggleItem: this.toggleFilter.bind(this),\n      setItems: this.setFilters.bind(this),\n      docCount: this.accessor.getDocCount(),\n      showCount: showCount,\n      translate: this.translate,\n      countFormatter: countFormatter\n    }), this.renderShowMore()]);\n  };\n\n  FacetFilter.prototype.renderShowMore = function () {\n    var _this = this;\n\n    var option = this.accessor.getMoreSizeOption();\n\n    if (!option || !this.props.showMore) {\n      return null;\n    }\n\n    return React.createElement(react_1.FastClick, {\n      handler: function handler() {\n        return _this.toggleViewMoreOption(option);\n      },\n      key: \"showMore\"\n    }, React.createElement(\"div\", {\n      \"data-qa\": \"show-more\",\n      className: this.bemBlocks.container(\"view-more-action\")\n    }, this.translate(option.label)));\n  };\n\n  FacetFilter.propTypes = FacetFilterProps_1.FacetFilterPropTypes;\n  FacetFilter.defaultProps = {\n    listComponent: ui_1.CheckboxItemList,\n    containerComponent: ui_1.Panel,\n    size: 50,\n    collapsable: false,\n    showCount: true,\n    showMore: true,\n    bucketsTransform: identity\n  };\n  return FacetFilter;\n}(react_1.SearchkitComponent);\n\nexports.FacetFilter = FacetFilter;","map":null,"metadata":{},"sourceType":"script"}